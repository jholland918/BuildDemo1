name: Release

on:
  push:
    branches:
      - main
    tags:
      - "v*"
    paths-ignore:
    - 'Docs/**'
    # - 'README.md'

permissions:
  contents: write # needed to create releases

jobs:
  checklicense:
    name: Check for UNITY_LICENSE in GitHub Secrets
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    outputs:
      is_unity_license_set: ${{ steps.checklicense_job.outputs.is_unity_license_set }}
    steps:
      - name: Check whether unity activation requests should be done
        id: checklicense_job
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        run: |
            echo "Skip activation job: ${{ env.UNITY_LICENSE != '' }}"
            export is_unity_license_set="${{ env.UNITY_LICENSE != '' }}"
            echo "is_unity_license_set=$is_unity_license_set" >> $GITHUB_OUTPUT

  activation:
    needs: checklicense
    if: needs.checklicense.outputs.is_unity_license_set == 'false'
    name: Request manual activation file ðŸ”‘
    runs-on: ubuntu-latest
    steps:
      # Request manual activation file
      - name: Request manual activation file
        id: getManualLicenseFile
        uses: game-ci/unity-request-activation-file@v2
      # Upload artifact (Unity_v20XX.X.XXXX.alf)
      - name: Expose as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.getManualLicenseFile.outputs.filePath }}
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}

  # build:
  #   name: Build
  #   needs: checklicense
  #   if: startsWith(github.ref, 'refs/tags/')
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Build Game
  #       run: mkdir artifact ; echo ${{ github.sha }} > artifact/Release.txt
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: artifact
  #         path: artifact

  build:
    needs: checklicense
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/cache@v3
        with:
          path: BuildDemo1/Library
          key: Library-BuildDemo1-StandaloneWindows64
          restore-keys: |
            Library-BuildDemo1-
            Library-
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: BuildDemo1
          buildMethod: Assets.Editor.CiBuilder.Build
          targetPlatform: ${{ matrix.targetPlatform }}
          #unityVersion: 2022.3.9f1
          allowDirtyBuild: true

      - name: Display root
        run: dir

      - name: Display build 1
        run: dir build

      - uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: build

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact
          path: artifact

      - name: Display structure of downloaded artifact
        run: ls -R

      - name: Build Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ".github/changelog-configuration.json"
          commitMode: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Zip Server Release
        uses: thedoctor0/zip-release@0.7.5
        with:
          directory: 'artifact/StandaloneWindows64/Server'
          filename: StandaloneWindows64.zip

      - name: Zip Client Release
        uses: thedoctor0/zip-release@0.7.5
        with:
          directory: 'artifact/StandaloneWindows64/Client'
          filename: StandaloneWindows64.zip

      - name: Display structure of working directory
        run: ls -R

      - name: Display Server stats
        run: stat artifact/StandaloneWindows64/Server/StandaloneWindows64.zip

      - name: Display Client stats
        run: stat artifact/StandaloneWindows64/Client/StandaloneWindows64.zip

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.changelog.outputs.changelog }}
          files: artifact/StandaloneWindows64/Server/StandaloneWindows64.zip
